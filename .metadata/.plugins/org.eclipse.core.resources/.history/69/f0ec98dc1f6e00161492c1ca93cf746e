package org.conxworks.paas.monitoring.alertbot;

import java.util.ArrayList;
import java.util.List;

import org.amdatu.scheduling.annotations.RepeatInterval;
import org.apache.http.HttpStatus;
import org.conxworks.paas.monitoring.alertbot.api.AlertNotificationException;
import org.conxworks.paas.monitoring.alertbot.api.IEmailAlertNotifier;
import org.conxworks.paas.monitoring.alertbot.api.ISMSAlertNotifier;
import org.conxworks.paas.monitoring.alertbot.api.NotificationMessage;
import org.conxworks.paas.monitoring.poller.api.IPoller;
import org.conxworks.paas.monitoring.poller.api.Location;
import org.conxworks.paas.monitoring.poller.api.PollingException;
import org.osgi.service.log.LogService;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

public class Monitor implements Job {

	private volatile IEmailAlertNotifier emailNotifier;
	private volatile ISMSAlertNotifier smsNotifier;
	private volatile IPoller poller;
	private volatile LogService logger;

	private String url;

	private int errorCount = 0;
	private int totalErrorCount = 0;
	private boolean errorInLastExecution = false;

	public Monitor(String url) {
		super();
		this.url = url;
	}

	@Override
	public void execute(JobExecutionContext ctx) throws JobExecutionException {
		// 1. Poll URL
		int status = -1;
		try {
			status = poller.ping(new Location(url));
			System.out.println(String.format("Ping to %s returned a code %d", url, status));
		} catch (PollingException e) {
			e.printStackTrace();
			throw new JobExecutionException(e);
		}
		//Overall error count.
		if (status != HttpStatus.SC_OK) {
			this.totalErrorCount++;
			if (this.errorInLastExecution) {
				//send an email
				List<String> to = new ArrayList<>();
				to.add("anathi.keswa@conxsoft.com");
				String body = String.format("WARNING! %s not reachable. Error %d has occured %d times.", url, status, errorCount);
				NotificationMessage message = new NotificationMessage("alertbot@conxsoft.com", to, body, "ConX Alert");
				try {
					emailNotifier.notifyViaEmail(message);
				} catch (AlertNotificationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}				
				
			}
			else {//There was no error: we try 3x, send sms, and send email
				this.errorInLastExecution = true;
				boolean recovered = false;
				try {
					//a) try 3x
					for (int tryCount = 1; tryCount < 3; tryCount++) {
						System.out.println(String.format("Retrying %d time..to ping %s",tryCount,url));
						try {
							status = poller.ping(new Location(url));
							System.out.println(String.format("Ping to %s returned a code %d", url, status));
						} catch (PollingException e) {
							e.printStackTrace();
							throw new JobExecutionException(e);
						}
						//TASK: Make the timer increment by half a second for each retry
						
						if (tryCount == 1) {
							Thread.sleep(1000);
						else if (tryCount == 2) {
								
							}
						}
						if (status == HttpStatus.SC_OK) {
							System.out.println(String.format("Oh wait...%s is fine after %d retries. recovered!", url, tryCount));
							recovered = true;
							this.errorInLastExecution = false;
							break;
						}
					}
					if (!recovered) {
						System.out.println(String.format("Retrying failed...proceeding notification"));
						List<String> to = new ArrayList<>();
						to.add("+12152801971");
						String body = String.format("WARNING! %s not reachable. Error %d has occured %d times.", url, status, errorCount);
						NotificationMessage message = new NotificationMessage("+12158838500", to, body, "ConX Alert"); 
						smsNotifier.notifyViaSMS(message);
						to = new ArrayList<>();
						to.add("anathi.keswa@conxsoft.com");
						String body1 = String.format("WARNING! %s not reachable. Error %d has occured %d times. Website now inactive for over 1 minute.", url, status, errorCount);
						NotificationMessage message1 = new NotificationMessage("alertbot@conxsoft.com", to, body1, "ConX Alert");
						emailNotifier.notifyViaEmail(message1);
					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
		else {
			System.out.println(String.format("Ping is good on %s",url));
		}
	}

}
