package org.conxworks.paas.monitoring.alertbot;

import java.util.ArrayList;
import java.util.List;

import org.amdatu.scheduling.annotations.RepeatInterval;
import org.apache.http.HttpStatus;
import org.conxworks.paas.monitoring.alertbot.api.AlertNotificationException;
import org.conxworks.paas.monitoring.alertbot.api.IEmailAlertNotifier;
import org.conxworks.paas.monitoring.alertbot.api.ISMSAlertNotifier;
import org.conxworks.paas.monitoring.alertbot.api.NotificationMessage;
import org.conxworks.paas.monitoring.poller.api.IPoller;
import org.conxworks.paas.monitoring.poller.api.Location;
import org.conxworks.paas.monitoring.poller.api.PollingException;
import org.osgi.service.log.LogService;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

public class Monitor implements Job {

	private volatile IEmailAlertNotifier emailNotifier;
	private volatile ISMSAlertNotifier smsNotifier;
	private volatile IPoller poller;
	private volatile LogService logger;

	private String url;

	private int errorCount = 0;

	public Monitor(String url) {
		super();
		this.url = url;
	}

	@Override
	public void execute(JobExecutionContext ctx) throws JobExecutionException {
		// 2. Poll URL
		int status = -1;
		try {
			status = poller.ping(new Location(url));
			System.out.println(String.format("Ping to %s returned a code %d", url, status));
		} catch (PollingException e) {
			e.printStackTrace();
			throw new JobExecutionException(e);
		}
		// 3a. If return status is OK, do nothing
		// 3b. If return status is NOT OK, do stuff
		if (status != HttpStatus.SC_OK) {
			// 1. Increment errorCount
			this.errorCount++;
			// 2. If exceeds 3, then fire notification
			if (this.errorCount >= 3) {
				try {
					List<String> to = new ArrayList<>();
					to.add("anathi.keswa@conxsoft.com");
					String body = String.format("WARNING! %s not reachable. Error %d has occured %d times.", url, status, errorCount);
					NotificationMessage message = new NotificationMessage("alertbot@conxsoft.com", to, body, "ConX Alert");
					emailNotifier.notifyViaEmail(message);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//3. Reset errorCount back to zero.
				this.errorCount = 0;
			}
			if (this.errorCount >= 9 ) {
				try {
					List<String> to = new ArrayList<>();
					to.add("+12152801971");
					String body = String.format("WARNING! %s not reachable. Error %d has occured %d times.", url, status, errorCount);
					NotificationMessage message = new NotificationMessage("+12158838500", to, body, "ConX Alert"); 
					smsNotifier.notifyViaSMS(message);
					to.add("anathi.keswa@conxsoft.com");
					String body1 = String.format("WARNING! %s not reachable. Error %d has occured %d times.", url, status, errorCount);
					NotificationMessage message1 = new NotificationMessage("alertbot@conxsoft.com", to, body1, "ConX Alert");
					emailNotifier.notifyViaEmail(message1);
					
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//3. Reset errorCount back to zero.
				this.errorCount = 0;
			}
		}
	}

}
